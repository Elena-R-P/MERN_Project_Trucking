{"version":3,"sources":["components/AllUnits.js","components/NewUnit.js","App.js","reportWebVitals.js","index.js","components/Unit.module.css"],"names":["AllUnits","useState","allUnits","setAllUnits","useEffect","axios","get","then","res","console","log","data","results","catch","err","className","map","unit","idx","type","model","vin","plate","state","format","oil_date","start_date","NewUnit","formInfo","setFormInfo","errors","setErrors","changeHandler","e","target","name","value","styles","container_new","onSubmit","preventDefault","post","navigate","onChange","message","App","class","src","to","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.11a4dfe4.chunk.js","sourcesContent":["import axios from 'axios';\nimport React, {useState, useEffect} from 'react';\nimport styles from './Unit.module.css';\nimport Moment from 'react-moment';\n\nconst AllUnits = () => {\n    const [allUnits, setAllUnits] = useState([]);\n\n    useEffect(()=>{\n        axios.get(\"http://localhost:8000/api/units\")\n        .then(res=>{\n            console.log(res)\n            setAllUnits(res.data.results)\n        })\n        .catch(err=>console.log(err))\n    }, [])\n    \n    \n    return (\n        <div className=\"container\">\n            <table>\n                <thead>\n                    <tr>\n                        <th>Unit #</th>\n                        <th>Type</th>\n                        <th>Model</th>\n                        <th>VIN#</th>\n                        <th>Plate</th>\n                        <th>State</th>\n                        <th>Last Oil change</th>\n                        <th>Start Date</th>\n                        <th>Termination Date</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        allUnits.map((unit, idx)=>{\n                            return <tr key={idx}>\n                    <td>{unit.unit}</td>\n                    <td>{unit.type}</td>\n                    <td>{unit.model}</td>\n                    <td>{unit.vin}</td>\n                    <td>{unit.plate}</td>\n                    <td>{unit.state}</td>\n                    <td><Moment format=\"MM/DD/YYYY\">{unit.oil_date}</Moment></td>\n                    <td><Moment format=\"MM/DD/YYYY\">{unit.start_date}</Moment></td>\n                    <td>-</td>\n                </tr>\n                        })\n                    }\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nexport default AllUnits;","import { navigate } from '@reach/router';\nimport React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport styles from'./Unit.module.css';\n\n\nconst NewUnit = () => {\n    const [formInfo, setFormInfo] = useState({\n        unit:\"\",\n        type:\"\",\n        model:\"\",\n        vin:\"\",\n        plate:\"\",\n        state:\"\",\n        start_date:\"\",\n        oil_date:\"\"\n    })\n    const [errors, setErrors] = useState({});\n    \n    const changeHandler = (e) =>{\n        setFormInfo({\n            ...formInfo,\n            [e.target.name]: e.target.value\n        })\n    }\n    \n    const submitHandler = (e) => {\n        e.preventDefault()\n        axios.post(\"http://localhost:8000/api/units/create\", formInfo)\n        .then(res=>{\n            console.log(res)\n            if(res.data.errors){\n                setErrors(res.data.errors)\n            } else {\n                navigate(\"/\")\n            }\n        })\n        .catch(err=>console.log(err))\n    }\n\n\n\n    return (\n        <div>\n            <h1>Please fill out the form</h1>\n            <div className={styles.container_new}>\n                <form onSubmit={submitHandler}>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <div className=\"mb-3\">\n                                <label className=\"form-label\">Unit#</label>\n                                <input onChange={changeHandler} type=\"text\" className=\"form-control\" name=\"unit\"/>\n                                <p className=\"text-danger\">{errors.unit? errors.unit.message: \"\"}</p>\n                            </div>\n                            <div className=\"mb-3\">\n                                <label className=\"form-label\">Type</label>\n                                <select onChange={changeHandler} type=\"text\" className=\"form-control\" name=\"type\">\n                                    <option value=\"Tractor\">Tractor</option>\n                                    <option value=\"Trailer\">Trailer</option>\n                                </select>\n                                <p className=\"text-danger\">{errors.type? errors.type.message: \"\"}</p>\n                            </div>\n                            <div className=\"mb-3\">\n                                <label className=\"form-label\">Model</label>\n                                <input onChange={changeHandler} type=\"text\" className=\"form-control\" name=\"model\"/>\n                                <p className=\"text-danger\">{errors.model? errors.model.message: \"\"}</p>\n                            </div>\n                            <div className=\"mb-3\">\n                                <label className=\"form-label\">VIN #</label>\n                                <input onChange={changeHandler} type=\"text\" className=\"form-control\" name=\"vin\"/>\n                            </div>\n                        </div>\n                        <div className=\"col\">\n                            <div className=\"mb-3\">\n                                <label className=\"form-label\">Plate #</label>\n                                <input onChange={changeHandler} type=\"text\" className=\"form-control\" name=\"plate\"/>\n                            </div>\n                            <div className=\"mb-3\">\n                                <label className=\"form-label\">State</label>\n                                <input onChange={changeHandler} type=\"text\" className=\"form-control\" name=\"state\"/>\n                            </div>\n                            <div className=\"mb-3\">\n                                <label className=\"form-label\">Start Date</label>\n                                <input onChange={changeHandler} type=\"date\" className=\"form-control\" name=\"start_date\"/>\n                            </div>\n                            <div className=\"mb-3\">\n                                <label className=\"form-label\">Oil change Date</label>\n                                <input onChange={changeHandler} type=\"date\" className=\"form-control\" name=\"oil_date\"/>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"mb-3 d-flex justify-content-end\">\n                        <button type=\"submit\" className=\"btn btn-info\">CREATE</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    );\n};\n\nexport default NewUnit;","import './App.css';\nimport AllUnits from './components/AllUnits';\nimport NewUnit from './components/NewUnit';\nimport {Router, Link} from '@reach/router'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <nav class=\"navbar navbar-expand-lg navbar-light my-sm-0\">\n        <div class=\"container-fluid d-flex justify-content-start\">\n          <img className=\"mainImg\" src=\"https://www.tecequipment.com/app/uploads/2020/10/Volvo-Semi-Truck.jpg\"/>\n          <h1>ERP Trucking Inc.</h1>\n          <button className=\"btnNew\"><Link to=\"/new\">New Unit</Link></button>\n          <button className=\"btnService\">Find Service</button>\n          <button className=\"btnNew\"><Link to=\"/\">Main Page</Link></button>\n        </div>\n      </nav>\n      \n      <Router>\n        <AllUnits path=\"/\"></AllUnits>\n        <NewUnit path=\"/new\"></NewUnit>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container_new\":\"Unit_container_new__J8i3W\"};"],"sourceRoot":""}